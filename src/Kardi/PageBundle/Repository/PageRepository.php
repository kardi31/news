<?php

namespace Kardi\PageBundle\Repository;

use Doctrine\ORM\QueryBuilder;
use Kardi\AdminBundle\Repository\DataTableRepository;

/**
 * PageRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PageRepository extends DataTableRepository
{
    public function getHomepage()
    {

        $qb = $this->createQueryBuilder('p');
        $qb->andWhere($qb->expr()->like('p.type', ':homepage'));
        $qb->setParameter('homepage', 'homepage');

        $query = $qb->getQuery();
        $result = $query->getOneOrNullResult();

        if (!$result) {
            $result = $this->findOneBy([], ['id', 'asc']);
        }

        return $result;
    }

    /**
     * @param array $fields
     * @param array $data
     * @param QueryBuilder|null $queryBuilder
     * @param null|string $locale
     * @return mixed
     */
    public function getDatatableResults(array $fields, array $data, ?QueryBuilder $queryBuilder = null, ?string $locale = null)
    {
        if (!$queryBuilder) {
            $queryBuilder = $this->getPageQueryBuilder($locale);
        }

        return parent::getDatatableResults($fields, $data, $queryBuilder);
    }

    /**
     * @param array $fields
     * @param array $data
     * @param QueryBuilder|null $queryBuilder
     * @param null|string $locale
     * @return mixed
     */
    public function countDatatableResults(array $fields, array $data, ?QueryBuilder $queryBuilder = null, ?string $locale = null)
    {
        if (!$queryBuilder) {
            $queryBuilder = $this->getPageQueryBuilder($locale);
        }

        return parent::countDatatableResults($fields, $data, $queryBuilder);
    }

    /**
     * @param null|string $locale
     * @return QueryBuilder
     */
    private function getPageQueryBuilder(?string $locale): QueryBuilder
    {
        $qb = $this->createQueryBuilder('p');
        $qb->select('p')
            ->leftJoin('p.translations', 'pt')
            ->andWhere($qb->expr()->eq("pt.lang", ":locale"))
            ->setParameter('locale', $locale);
        return $qb;
    }
}
